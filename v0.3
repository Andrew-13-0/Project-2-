# --------Class that Uses information on which area is impacted to assess the damage--------

class ImpactedPerson:
    def __init__ (self, name, address, biome, damage):
        self.name = name
        self.address = address
        self.biome = biome
        self.damage = damage
        self.FireSpreadChance = 0

    # The user specifies the percent humidity and percent of the wind speed
    # to assess how likely fire is to spred.
    
    def FireSpreadAssessment(self, RalativeHumidityPercent, WindSpeedPercent ):
        if  RalativeHumidityPercent <= 0.15 :
            self.FireSpreadChance += 1
            print( "The humidity icreases the likelyhood of fire spreading.")
        else:
            print( "The humidity decreases the likelyhood fire spreading." )
        
        if  WindSpeedPercent >= 0.1 :
            self.FireSpreadChance += 1
            print(" the wind speed increases the likelyhood of spreading fire")
        else:
            print( "the wind speed decreases the likelyhood of spreading fire" )
            
        if self.FireSpreadChance == 0:
            print("Assessment: Safe")
        elif  self.FireSpreadChance == 1:
            print("Assessment: Caution")
        elif self.FireSpreadChance == 2 :
            print("Assessment: Danger")
    
    # Retrieves the information of the object a and prints it out
    def GetInfo(self):
        print("="*35)
        print("\tImpacted Person Information\n")
        print(f"Name: {self.name}")
        print(f"Address: {self.address}")
        print(f"Biome: {self.biome}")
        print(f"Damage: {self.damage}")
        print("="*35)


# creates person as an object in ImpactedPerson class to test FireSpreadAssessment and object creation

Person1 = ImpactedPerson("Andy","13235 Impact Ave 17333 ", "Forest", "Severely Damaged" )
Person1.FireSpreadAssessment(.34, .43)
Person1.GetInfo()

# --------Adds Queue System--------
class HelpQueue:
    def __init__ (self):
        self.__queue = []
        self.__Pqueue = []
        
    # Adds person to the Standard queue   
    def AddStrandardQueue(self,person):
        self.__queue.append(person)
        print(f"{person.name} is added to Standard queue")


    # Adds person to the Piority queue 
    def AddPriorityQueue(self,person):
        self.__Pqueue.append(person)
        print(f"{person.name} added to Priority queue")

    # Removes people from both queues starting with the Priority and ending with the Standard 
    def removeQueue(self):
        if len(self.__Pqueue) > 0:
            person = self.__Pqueue.pop(0)
            print(f"{person.name} removed from Priority queue")
        elif len(self.__queue) > 0:
            person = self.__queue.pop(0)
            print(f"{person.name} removed from queue")
        else:
            print("No one in queue")

    # Prints the list of people in both queues
    def GetStandardQueue(self):
        print("="*35)
        print("\tQueue Information\n")
        for person in self.__queue:
            print(person.GetInfo())
         
    def GetPriorityQueue(self):
        print("="*35)
        print(" \tPriority Queue Information\n")
        for person in self.__Pqueue:
            print(person.GetInfo())

# creates 6 people acting as people in queue with different priorities
# added and removed from queue 

print ("\n------ Adding to queue ------\n" )

Queue1 = HelpQueue()

Person1 = ImpactedPerson("Bill", "13235 A Ave 21333", "Forest", "Severely Damaged")
Queue1.AddStrandardQueue(Person1)

Person2 = ImpactedPerson("Ted", "02332 B Road 92332", "Canyon", "Barely Damaged")
Queue1.AddStrandardQueue(Person2)

Person3 = ImpactedPerson("Bob", "3442 C Ave 43233", "Rainforest", "Severely Damaged")
Queue1.AddStrandardQueue(Person3)

Person4 = ImpactedPerson("Amy", "12673 D Street 93213", "Desert", "Barely Damaged")
Queue1.AddPriorityQueue(Person4)

Person5 = ImpactedPerson("Jill", "13235 E Ave 54342", "Forest", "Severely Damaged")
Queue1.AddPriorityQueue(Person5)

Person6 = ImpactedPerson("Mandy", "13235 F Street 03424", "Forest", "Barely Damaged")
Queue1.AddPriorityQueue(Person6)


print ("\n------ Get List Test------\n" )

Queue1.GetStandardQueue()
Queue1.GetPriorityQueue()

print ("\n------ Removing from queue ------\n" )

Queue1.removeQueue()
Queue1.removeQueue()
Queue1.removeQueue()
Queue1.removeQueue()
Queue1.removeQueue()
Queue1.removeQueue()

